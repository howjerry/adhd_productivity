# ADHD 生產力系統 - 強化 Nginx 配置
# 包含 WAF 功能和企業級安全配置

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

# 錯誤日誌配置
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 載入動態模組
# load_module modules/ngx_http_modsecurity_module.so;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # ===================================================
    # 基本配置
    # ===================================================
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 伺服器標記隱藏
    server_tokens off;
    more_clear_headers 'Server';
    more_clear_headers 'X-Powered-By';
    more_clear_headers 'X-AspNet-Version';
    more_clear_headers 'X-AspNetMvc-Version';
    
    # ===================================================
    # 性能優化
    # ===================================================
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 15 10;
    keepalive_requests 100;
    send_timeout 10;
    
    # 客戶端配置
    client_max_body_size 10M;
    client_body_timeout 12;
    client_header_timeout 12;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # 代理緩衝
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 8 8k;
    proxy_busy_buffers_size 16k;
    
    # ===================================================
    # 壓縮配置
    # ===================================================
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_disable "msie6";
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;
    
    # Brotli 壓縮 (如果可用)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # ===================================================
    # 安全配置
    # ===================================================
    
    # 載入 WAF 規則
    include /etc/nginx/conf.d/waf-rules.conf;
    
    # 隱藏 Nginx 版本和操作系統信息
    server_tokens off;
    
    # 緩衝區溢出攻擊防護
    client_body_buffer_size 1K;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
    
    # 防止 HTTP 響應分割攻擊
    merge_slashes off;
    
    # ===================================================
    # 日誌配置
    # ===================================================
    
    # 標準日誌格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # 安全日誌格式 (包含威脅評分)
    log_format security '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'threat_score=$threat_score blocked_ip=$blocked_ip '
                       'blocked_ua=$blocked_user_agent sql_injection=$sql_injection '
                       'xss_attack=$xss_attack path_traversal=$path_traversal';
    
    # JSON 格式日誌 (用於日誌分析)
    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"http_host":"$http_host",'
        '"server_name":"$server_name",'
        '"request_uri":"$request_uri",'
        '"https":"$https",'
        '"scheme":"$scheme",'
        '"threat_score":"$threat_score",'
        '"attack_detected":"$sql_injection$xss_attack$path_traversal"'
        '}';
    
    # 啟用不同類型的日誌
    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/security.log security;
    access_log /var/log/nginx/json.log json_combined;
    
    # ===================================================
    # FastCGI 和代理配置
    # ===================================================
    
    # FastCGI 快取配置
    fastcgi_cache_path /var/cache/nginx/fastcgi levels=1:2 keys_zone=FASTCGI:100m inactive=60m;
    fastcgi_cache_key "$scheme$request_method$host$request_uri";
    
    # 代理快取配置
    proxy_cache_path /var/cache/nginx/proxy levels=1:2 keys_zone=PROXY:100m inactive=60m max_size=1g;
    proxy_temp_path /var/cache/nginx/proxy_temp;
    
    # ===================================================
    # SSL 配置模板
    # ===================================================
    
    # SSL 配置 (A+ 等級)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # ===================================================
    # 安全中間件模擬
    # ===================================================
    
    # WAF 阻擋邏輯
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # 阻擋高威脅評分的請求
        if ($threat_score >= 2) {
            access_log /var/log/nginx/blocked.log security;
            return 444;
        }
        
        # 阻擋黑名單 IP
        if ($blocked_ip) {
            access_log /var/log/nginx/blocked.log security;
            return 444;
        }
        
        # 阻擋惡意 User-Agent
        if ($blocked_user_agent) {
            access_log /var/log/nginx/blocked.log security;
            return 444;
        }
        
        # 阻擋危險的 HTTP 方法
        if ($blocked_method) {
            access_log /var/log/nginx/blocked.log security;
            return 405;
        }
        
        # 蜜罐陷阱
        if ($honeypot_trap) {
            access_log /var/log/nginx/honeypot.log security;
            return 444;
        }
        
        # 緊急阻擋模式
        if ($emergency_block) {
            return 503;
        }
        
        # 其他配置繼續處理...
        include /etc/nginx/conf.d/*.conf;
    }
    
    # ===================================================
    # 預設錯誤處理
    # ===================================================
    
    # 自定義錯誤頁面
    error_page 400 401 403 404 /error.html;
    error_page 500 502 503 504 /50x.html;
    error_page 429 /rate_limit.html;
    
    # ===================================================
    # 包含站點配置
    # ===================================================
    
    # 包含虛擬主機配置
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
    
    # ===================================================
    # 監控端點
    # ===================================================
    
    server {
        listen 127.0.0.1:8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# ===================================================
# Stream 配置 (TCP/UDP 代理)
# ===================================================

stream {
    # 日誌格式
    log_format proxy '$remote_addr [$time_local] '
                    '$protocol $status $bytes_sent $bytes_received '
                    '$session_time "$upstream_addr" '
                    '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';
    
    access_log /var/log/nginx/stream.log proxy;
    error_log /var/log/nginx/stream_error.log;
    
    # 載入 stream 配置
    # include /etc/nginx/stream.d/*.conf;
}