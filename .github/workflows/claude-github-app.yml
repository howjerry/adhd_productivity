name: Claude GitHub App Integration

on:
  # 當在 issue 或 PR 中提到 @claude 時觸發
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, ready_for_review]

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read
  checks: write

jobs:
  claude-integration:
    name: Claude Integration
    runs-on: ubuntu-latest
    # 只在特定條件下執行
    if: |
      (
        github.event_name == 'issue_comment' && 
        contains(github.event.comment.body, '@claude')
      ) || (
        github.event_name == 'pull_request_review_comment' && 
        contains(github.event.comment.body, '@claude')
      ) || (
        github.event_name == 'issues' && 
        contains(github.event.issue.labels.*.name, 'claude')
      ) || (
        github.event_name == 'pull_request' && 
        contains(github.event.pull_request.labels.*.name, 'claude-review')
      )
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 使用 GitHub App authentication
    - name: Generate GitHub App token
      id: app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.CLAUDE_APP_ID }}
        private-key: ${{ secrets.CLAUDE_APP_PRIVATE_KEY }}

    - name: Process with Claude
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        echo "🤖 處理 Claude 請求..."
        
        # 取得事件資訊
        EVENT_TYPE="${{ github.event_name }}"
        
        case $EVENT_TYPE in
          "issue_comment"|"pull_request_review_comment")
            COMMENT_BODY=$(echo '${{ github.event.comment.body }}' | sed 's/@claude//g')
            echo "評論內容: $COMMENT_BODY"
            
            # 建立回應
            if [[ "$EVENT_TYPE" == "issue_comment" ]]; then
              ISSUE_NUMBER="${{ github.event.issue.number }}"
              gh issue comment $ISSUE_NUMBER --body "🤖 Claude 已收到您的請求。請在 Claude.ai 中使用相同的問題內容。"
            else
              PR_NUMBER="${{ github.event.pull_request.number }}"
              gh pr comment $PR_NUMBER --body "🤖 Claude 已收到您的請求。請在 Claude.ai 中使用相同的問題內容。"
            fi
            ;;
            
          "issues")
            if [[ "${{ contains(github.event.issue.labels.*.name, 'claude') }}" == "true" ]]; then
              ISSUE_NUMBER="${{ github.event.issue.number }}"
              ISSUE_TITLE="${{ github.event.issue.title }}"
              ISSUE_BODY="${{ github.event.issue.body }}"
              
              # 建立分支
              BRANCH_NAME="claude/issue-$ISSUE_NUMBER"
              git checkout -b "$BRANCH_NAME"
              
              # 建立 TODO 檔案提醒
              echo "# TODO: Issue #$ISSUE_NUMBER" > "TODO_issue_$ISSUE_NUMBER.md"
              echo "## $ISSUE_TITLE" >> "TODO_issue_$ISSUE_NUMBER.md"
              echo "" >> "TODO_issue_$ISSUE_NUMBER.md"
              echo "$ISSUE_BODY" >> "TODO_issue_$ISSUE_NUMBER.md"
              
              git add "TODO_issue_$ISSUE_NUMBER.md"
              git commit -m "📝 Add TODO for issue #$ISSUE_NUMBER"
              git push origin "$BRANCH_NAME"
              
              # 建立 PR
              gh pr create \
                --title "🤖 [Claude] $ISSUE_TITLE" \
                --body "## 相關 Issue
                
                Closes #$ISSUE_NUMBER
                
                ## Claude 整合說明
                
                這個 PR 是由 Claude GitHub 整合自動建立的。
                
                ### 下一步：
                1. 在 [Claude.ai](https://claude.ai) 中開啟對話
                2. 貼上 Issue 內容並請求實作
                3. 將 Claude 產生的程式碼更新到這個分支
                4. 完成後請求審查
                
                ---
                *由 Claude GitHub App 自動建立*" \
                --head "$BRANCH_NAME" \
                --base main
                
              gh issue comment $ISSUE_NUMBER --body "🤖 已建立 PR 分支: \`$BRANCH_NAME\`
              
請在 Claude.ai 中使用以下提示：

\\\`\\\`\\\`
請幫我實作 GitHub issue #$ISSUE_NUMBER：
$ISSUE_TITLE

$ISSUE_BODY
\\\`\\\`\\\`"
            fi
            ;;
            
          "pull_request")
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'claude-review') }}" == "true" ]]; then
              PR_NUMBER="${{ github.event.pull_request.number }}"
              
              # 取得 PR 差異
              gh pr diff $PR_NUMBER > pr_diff_$PR_NUMBER.txt
              
              # 建立審查檢查清單
              gh pr comment $PR_NUMBER --body "## 🤖 Claude 程式碼審查檢查清單

請在 [Claude.ai](https://claude.ai) 中貼上這個 PR 的差異並要求審查：

### 審查重點：
- [ ] 程式碼品質和可讀性
- [ ] 潛在的 bug 或錯誤  
- [ ] 安全性問題
- [ ] 效能影響
- [ ] ADHD 使用者體驗考量
- [ ] 是否遵循專案規範

### 使用方式：
1. 執行 \`gh pr diff $PR_NUMBER\` 取得差異
2. 在 Claude.ai 貼上差異內容
3. 要求 Claude 根據上述重點進行審查
4. 將審查結果貼回這個 PR

---
*由 Claude GitHub App 自動建立*"
            fi
            ;;
        esac