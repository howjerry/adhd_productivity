name: Setup Auto-Fix Dependencies

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  setup:
    name: Setup Auto-Fix Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    # 安裝 Frontend 依賴
    - name: Setup Frontend Dependencies
      working-directory: ./frontend
      run: |
        echo "=== Installing Prettier ==="
        npm install --save-dev prettier

        echo "=== Installing organize-imports-cli ==="
        npm install --save-dev organize-imports-cli

        echo "=== Creating Prettier config ==="
        cat > .prettierrc.json << 'EOF'
        {
          "semi": true,
          "trailingComma": "es5",
          "singleQuote": true,
          "printWidth": 80,
          "tabWidth": 2,
          "useTabs": false,
          "arrowParens": "always",
          "endOfLine": "lf"
        }
        EOF

        echo "=== Creating Prettier ignore file ==="
        cat > .prettierignore << 'EOF'
        node_modules
        dist
        build
        coverage
        .next
        .cache
        public
        *.min.js
        *.min.css
        EOF

    # 安裝 Backend 依賴
    - name: Setup Backend Dependencies
      working-directory: ./backend
      run: |
        echo "=== Installing Prettier ==="
        npm install --save-dev prettier

        echo "=== Creating Prettier config ==="
        cat > .prettierrc.json << 'EOF'
        {
          "semi": true,
          "trailingComma": "es5",
          "singleQuote": true,
          "printWidth": 80,
          "tabWidth": 2,
          "useTabs": false,
          "arrowParens": "always",
          "endOfLine": "lf"
        }
        EOF

        echo "=== Creating Prettier ignore file ==="
        cat > .prettierignore << 'EOF'
        node_modules
        dist
        build
        coverage
        *.min.js
        *.min.css
        EOF

    # 提交變更
    - name: Commit changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        git add -A
        git commit -m "🔧 Setup auto-fix dependencies and configurations" || echo "No changes to commit"
        git push || echo "No changes to push"

    - name: Create PR
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: pulls } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: `${context.repo.owner}:setup-auto-fix`,
            base: 'main',
            state: 'open'
          });

          if (pulls.length === 0) {
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🔧 Setup Auto-Fix Dependencies',
              body: `This PR adds the necessary dependencies and configurations for the auto-fix workflow:
              
              ### Changes:
              - ✅ Added Prettier to frontend and backend
              - ✅ Added organize-imports-cli to frontend
              - ✅ Created Prettier configuration files
              - ✅ Updated package.json scripts
              
              ### Next Steps:
              After merging this PR, the auto-fix workflow will be able to:
              - Format code with Prettier
              - Fix ESLint issues
              - Organize imports
              - Fix security vulnerabilities
              `,
              head: 'setup-auto-fix',
              base: 'main'
            });
          }